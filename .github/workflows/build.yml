name: Build
on: [push, pull_request]
jobs:
  build:
    name: >-
      ${{ matrix.os }} ${{ matrix.db }} (OS DB package)
    # Available hosted runners.
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
    # ubuntu-20.04 # focal
    # ubuntu-18.04 # bionic
    # ubuntu-16.04 # xenial
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-failure || false }}
    strategy:
      matrix:
        include:
          - {os: ubuntu-20.04, db: mariadb-server-10.3, allow-failure: true}
          # Stucking.
          # - {os: ubuntu-18.04, db: mariadb-server-10.1, allow-failure: true}
          - {os: ubuntu-16.04, db: mariadb-server-10.0, allow-failure: true}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - run: ss -lntp
      # Stop the installed MySQL.
      - run: sudo service mysql stop
      - run: echo 'DB=${{ matrix.db }}' >> $GITHUB_ENV
      - run: ./ci/setup.sh

  db-container:
    name: >-
      ${{ matrix.db }}:${{ matrix.db-image-tag }} ${{ matrix.db-client || '' }} (DB container)
    runs-on: ubuntu-20.04
    continue-on-error: ${{ matrix.allow-failure || false }}
    strategy:
      matrix:
        include:
          # https://hub.docker.com/_/mariadb
          - {ruby: 2.4, db: mariadb, db-image-tag: 10.5-focal, db-client: libmariadb-dev-compat}
          - {ruby: 2.4, db: mariadb, db-image-tag: 10.4-focal}
          - {ruby: 2.4, db: mariadb, db-image-tag: 10.3-focal}
          - {ruby: 2.4, db: mariadb, db-image-tag: 10.2-bionic}
          - {ruby: 2.4, db: mariadb, db-image-tag: 10.1-bionic, allow-failure: true}
          - {ruby: 2.4, db: mariadb, db-image-tag: 10.0-xenial, allow-failure: true}
      fail-fast: false
    steps:
      - uses: actions/checkout@v1
      - run: ss -lntp
      # Stop the installed MySQL.
      - run: sudo service mysql stop
      - run: echo 'DB=${{ matrix.db }}' >> $GITHUB_ENV
      - run: echo 'DB_IMAGE_TAG=${{ matrix.db-image-tag }}' >> $GITHUB_ENV
      - run: ci/setup_db_container.sh
      - if: matrix.db-client != null
        run: sudo apt-get install -y '${{ matrix.db-client }}'
